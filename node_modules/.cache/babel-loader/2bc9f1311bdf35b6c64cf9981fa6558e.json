{"ast":null,"code":"import _objectSpread from \"/Users/ewelinanowicka/Desktop/ProjectTrekApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/ewelinanowicka/Desktop/ProjectTrekApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/ewelinanowicka/Desktop/ProjectTrekApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { projectFirestore } from \"../firebase/firebase\";\nexport var useCollection = function useCollection(collection, _query, _orderBy) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    documents = _useState2[0],\n    setDocuments = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1]; // if we don't use a ref --> infinite loop in useEffect\n  // _query is an array and is \"different\" on every function call\n  var query = useRef(_query).current;\n  var orderBy = useRef(_orderBy).current;\n  useEffect(function () {\n    var ref = projectFirestore.collection(collection);\n    if (query) {\n      var _ref;\n      ref = (_ref = ref).where.apply(_ref, _toConsumableArray(query));\n    }\n    if (orderBy) {\n      var _ref2;\n      ref = (_ref2 = ref).orderBy.apply(_ref2, _toConsumableArray(orderBy));\n    }\n    var unsubscribe = ref.onSnapshot(function (snapshot) {\n      var results = [];\n      snapshot.docs.forEach(function (doc) {\n        results.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        }));\n      });\n\n      // update state\n      setDocuments(results);\n      setError(null);\n    }, function (error) {\n      console.log(error);\n      setError('could not fetch the data');\n    });\n\n    // unsubscribe on unmount\n    return function () {\n      return unsubscribe();\n    };\n  }, [collection, query, orderBy]);\n  return {\n    documents: documents,\n    error: error\n  };\n};","map":{"version":3,"names":["useEffect","useState","useRef","projectFirestore","useCollection","collection","_query","_orderBy","_useState","_useState2","_slicedToArray","documents","setDocuments","_useState3","_useState4","error","setError","query","current","orderBy","ref","_ref","where","apply","_toConsumableArray","_ref2","unsubscribe","onSnapshot","snapshot","results","docs","forEach","doc","push","_objectSpread","data","id","console","log"],"sources":["/Users/ewelinanowicka/Desktop/ProjectTrekApp/src/hooks/useCollection.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport { projectFirestore } from \"../firebase/firebase\"\n\nexport const useCollection = (collection, _query, _orderBy) => {\n  const [documents, setDocuments] = useState(null)\n  const [error, setError] = useState(null)\n\n  // if we don't use a ref --> infinite loop in useEffect\n  // _query is an array and is \"different\" on every function call\n  const query = useRef(_query).current\n  const orderBy = useRef(_orderBy).current\n\n  useEffect(() => {\n    let ref = projectFirestore.collection(collection)\n\n    if (query) {\n      ref = ref.where(...query)\n    }\n    if (orderBy) {\n      ref = ref.orderBy(...orderBy)\n    }\n\n    const unsubscribe = ref.onSnapshot(snapshot => {\n      let results = []\n      snapshot.docs.forEach(doc => {\n        results.push({...doc.data(), id: doc.id})\n      });\n      \n      // update state\n      setDocuments(results)\n      setError(null)\n    }, error => {\n      console.log(error)\n      setError('could not fetch the data')\n    })\n\n    // unsubscribe on unmount\n    return () => unsubscribe()\n\n  }, [collection, query, orderBy])\n\n  return { documents, error }\n}"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,gBAAgB,QAAQ,sBAAsB;AAEvD,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAK;EAAA,IAAAC,SAAA,GAC3BP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACJZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA,KAEtB;EACA;EACA,IAAMG,KAAK,GAAGf,MAAM,CAACI,MAAM,CAAC,CAACY,OAAO;EACpC,IAAMC,OAAO,GAAGjB,MAAM,CAACK,QAAQ,CAAC,CAACW,OAAO;EAExClB,SAAS,CAAC,YAAM;IACd,IAAIoB,GAAG,GAAGjB,gBAAgB,CAACE,UAAU,CAACA,UAAU,CAAC;IAEjD,IAAIY,KAAK,EAAE;MAAA,IAAAI,IAAA;MACTD,GAAG,GAAG,CAAAC,IAAA,GAAAD,GAAG,EAACE,KAAK,CAAAC,KAAA,CAAAF,IAAA,EAAAG,kBAAA,CAAIP,KAAK,EAAC;IAC3B;IACA,IAAIE,OAAO,EAAE;MAAA,IAAAM,KAAA;MACXL,GAAG,GAAG,CAAAK,KAAA,GAAAL,GAAG,EAACD,OAAO,CAAAI,KAAA,CAAAE,KAAA,EAAAD,kBAAA,CAAIL,OAAO,EAAC;IAC/B;IAEA,IAAMO,WAAW,GAAGN,GAAG,CAACO,UAAU,CAAC,UAAAC,QAAQ,EAAI;MAC7C,IAAIC,OAAO,GAAG,EAAE;MAChBD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,UAAAC,GAAG,EAAI;QAC3BH,OAAO,CAACI,IAAI,CAAAC,aAAA,KAAKF,GAAG,CAACG,IAAI,EAAE;UAAEC,EAAE,EAAEJ,GAAG,CAACI;QAAE,GAAE;MAC3C,CAAC,CAAC;;MAEF;MACAxB,YAAY,CAACiB,OAAO,CAAC;MACrBb,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,UAAAD,KAAK,EAAI;MACVsB,OAAO,CAACC,GAAG,CAACvB,KAAK,CAAC;MAClBC,QAAQ,CAAC,0BAA0B,CAAC;IACtC,CAAC,CAAC;;IAEF;IACA,OAAO;MAAA,OAAMU,WAAW,EAAE;IAAA;EAE5B,CAAC,EAAE,CAACrB,UAAU,EAAEY,KAAK,EAAEE,OAAO,CAAC,CAAC;EAEhC,OAAO;IAAER,SAAS,EAATA,SAAS;IAAEI,KAAK,EAALA;EAAM,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module"}